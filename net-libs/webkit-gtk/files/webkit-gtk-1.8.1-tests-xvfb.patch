Rely on virtualx.eclass instead of manually spawning Xvfb. Fixes occasional
test failures.

--- a/Tools/Scripts/run-gtk-tests
+++ b/Tools/Scripts/run-gtk-tests
@@ -147,18 +147,9 @@
 
     def _setup_testing_environment(self):
         self._test_env = os.environ
-        self._test_env["DISPLAY"] = self._options.display
         self._test_env["WEBKIT_INSPECTOR_PATH"] = os.path.abspath(os.path.join(self._programs_path, 'resources', 'inspector'))
         self._test_env['GSETTINGS_BACKEND'] = 'memory'
 
-        try:
-            self._xvfb = self._create_process(["Xvfb", self._options.display, "-screen", "0", "800x600x24", "-nolisten", "tcp"],
-                                              stdout=subprocess.PIPE, stderr=subprocess.PIPE)
-        except Exception as e:
-            sys.stderr.write("Failed to run Xvfb: %s\n", e)
-            sys.stderr.flush()
-            return False
-
         # If we cannot start the accessibility daemons, we can just skip the accessibility tests.
         if not self._start_accessibility_daemons():
             print "Could not start accessibility bus, so skipping TestWebKitAccessibility"
@@ -170,7 +161,6 @@
             self._spi_registryd.terminate()
         if self._spi_bus_launcher:
             self._spi_bus_launcher.terminate()
-        self._xvfb.kill();
 
     def _remove_skipped_tests(self):
         tests_to_remove = []
