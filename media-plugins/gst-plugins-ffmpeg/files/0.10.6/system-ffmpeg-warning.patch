diff -NrU5 gst-ffmpeg-0.10.6.orig/configure gst-ffmpeg-0.10.6/configure
--- gst-ffmpeg-0.10.6.orig/configure	2008-12-05 23:57:18.000000000 +0100
+++ gst-ffmpeg-0.10.6/configure	2008-12-06 00:02:04.000000000 +0100
@@ -17130,68 +17130,10 @@
 _ACEOF
 
   HAVE_FFMPEG_UNINSTALLED=0
   { echo "$as_me:$LINENO: Using system-installed FFMpeg code" >&5
 echo "$as_me: Using system-installed FFMpeg code" >&6;}
-  { echo "$as_me:$LINENO: WARNING:
-  ======================================================================
-   WARNING: you have chosen to build gst-ffmpeg against a random
-   external version of ffmpeg instead of building it against the tested
-   internal ffmpeg snapshot that is included with gst-ffmpeg.
-
-   This is a very bad idea.  So bad in fact that words cannot express
-   just how bad it is.  Suffice to say that it is BAD.
-
-   The GStreamer developers cannot and will not support a gst-ffmpeg
-   built this way.  Any bug reports that indicate there is an external
-   version of ffmpeg involved will be closed immediately without further
-   investigation.
-
-   The reason such a setup can't be supported is that the ffmpeg API
-   and ABI is in constant flux, yet there aren't any official releases
-   of the ffmpeg library to develop against.  This makes it impossible
-   to guarantee that gst-ffmpeg will work reliably, or even compile,
-   with a randomly picked version ffmpeg.  Even if gst-ffmpeg compiles
-   and superficially appears to work fine against your chosen external
-   ffmpeg version, that might just not be the case on other systems, or
-   even the same system at a later time, or when using decoders,
-   encoders, demuxers or muxers that have not been tested.
-
-   Please do not create or distribute binary packages of gst-ffmpeg
-   that link against an external ffmpeg. Thank you!
-  ======================================================================
-  " >&5
-echo "$as_me: WARNING:
-  ======================================================================
-   WARNING: you have chosen to build gst-ffmpeg against a random
-   external version of ffmpeg instead of building it against the tested
-   internal ffmpeg snapshot that is included with gst-ffmpeg.
-
-   This is a very bad idea.  So bad in fact that words cannot express
-   just how bad it is.  Suffice to say that it is BAD.
-
-   The GStreamer developers cannot and will not support a gst-ffmpeg
-   built this way.  Any bug reports that indicate there is an external
-   version of ffmpeg involved will be closed immediately without further
-   investigation.
-
-   The reason such a setup can't be supported is that the ffmpeg API
-   and ABI is in constant flux, yet there aren't any official releases
-   of the ffmpeg library to develop against.  This makes it impossible
-   to guarantee that gst-ffmpeg will work reliably, or even compile,
-   with a randomly picked version ffmpeg.  Even if gst-ffmpeg compiles
-   and superficially appears to work fine against your chosen external
-   ffmpeg version, that might just not be the case on other systems, or
-   even the same system at a later time, or when using decoders,
-   encoders, demuxers or muxers that have not been tested.
-
-   Please do not create or distribute binary packages of gst-ffmpeg
-   that link against an external ffmpeg. Thank you!
-  ======================================================================
-  " >&2;}
-
-    sleep 15
 else
 
   source "$srcdir/ffmpegrev"
 
   { echo "$as_me:$LINENO: Using ffmpeg revision $FFMPEG_REVISION" >&5
